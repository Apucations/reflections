hi
1)What happens when you initialize a repository? Why do you need to do it?

	that a repository is created but it contents 0 commits, to create a repository you should use the comand git init
	to add some files to the commit you should use the comand git add file

2)How is the staging area different from the working directory and the repository? What value do you think it offers?

	the stating area is some state between that can be use to chec what are we going to commit, and be sure that it is like we want to do it 

3)git diif 
	compare working directory & staging area
  gif diff --staaged
  	compare staging area & the last commit
  git diff commit1 commit2
    compare commit1 & commit2

4)How can you use the staging area to make sure you have one commit per logical change?

	you can compare what going on there and be sure that is only one logical change done since the last commit.

5)git brach
	show you all the braches in the proyect
  git brach name
  	create a new brach named name
  git checkout name1
  	change the branche to the brache named name1

6)What are some situations when branches would be helpful in keeping your history organized? How would branches help?

	when you create a new paralel version of your work as new language or some exeriments that yu are not sure how it will end.

7)How do the diagrams help you visualize the branch structure?

	the diagrams give you a visual idea about the estructure of the proyect itself.

8)git merge branche1 branch2
	combine both branches in 1
  git branch -d namebranche
	delete the branche named branchename, but not the commits, they are still reacheible by number of commit.

9)What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
	
	the result is the combination of all the commits of both branches in only one.

10)What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?

